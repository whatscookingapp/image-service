name: Docker CD

on: [push]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: npm install and build webpack
  #     run: |
  #       npm install
  #       npm run build
  #   - uses: actions/upload-artifact@master
  #     with:
  #       name: webpack artifacts
  #       path: public/

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   strategy:
  #     matrix:
  #       os: [ubuntu-lastest, windows-2016]
  #       node-version: [8.x, 10.x]

  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #   - uses: actions/download-artifact@master
  #     with:
  #       name: webpack artifacts
  #       path: public
  #   - name: npm install, and test
  #     run: |
  #       npm install
  #       npm test
  #     env:
  #       CI: true
  # tag:
  #   runs-on: ubuntu-latest
  #   name: tag

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v1
  #   - name: Build, Tag, Push
  #     uses: mattdavis0351/actions/docker-gpr@v1
  #     with:
  #       repo-token: ${{ secrets.GITHUB_TOKEN }}
  #       image-name: image-service
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    # needs: tag

    steps:
    - name: Save DigitalOcean kubeconfig
      uses: digitalocean/action-doctl@v1
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      with:
        args: kubernetes cluster kubeconfig show k8s-1-16-2-do-3-ams3-1579807618969 > $GITHUB_WORKSPACE/.kubeconfig
    - name: 'Deploy'
      uses: 'deliverybot/helm@v1'
      with:
        release: 'image-service'
        namespace: 'default'
        chart: 'helm'
        token: '${{ github.token }}'
      env:
        KUBECONFIG_FILE: '$GITHUB_WORKSPACE/.kubeconfig'

